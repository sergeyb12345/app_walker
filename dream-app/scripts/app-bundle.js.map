{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","resources/elements/loading-indicator.js","C:/justeat/sergey-balaboskin/app_walker/dream-app/src/app.html"],"names":["App","message","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","globalResources","nprogress","LoadingIndicator","name","defaultValue","on","loadingChanged","newValue","done"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA,MACX,eAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,cAAf;AACD;;;;;;;;oBCHY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeb,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B;AAChCA,WAAOY,eAAP,CAAuB,CAAC,8BAAD,CAAvB;AACD;;;;;;;;;;MCFWC;;;;;;;;;;;;;;;;;;;;;;;;;AAGL,MAAIC,8CAAmB,kCAC5B,8BAAO,CAAC,yBAAD,CAAP,CAD4B,EAE5B,gCAAS,EAACC,MAAM,SAAP,EAAkBC,cAAc,KAAhC,EAAT,CAF4B,EAG5BC,EAH4B;AAAA;AAAA;AAAA;;AAAA,qBAI5BC,cAJ4B,2BAIbC,QAJa,EAIJ;AACtB,UAAIA,QAAJ,EAAc;AACZN,kBAAUJ,KAAV;AACD,OAFD,MAEO;AACLI,kBAAUO,IAAV;AACD;AACF,KAV2B;;AAAA;AAAA,MAAvB;;ACHP","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  config.globalResources(['./elements/loading-indicator']);\n}\n","import * as nprogress from 'nprogress';\r\nimport {bindable, noView, decorators} from 'aurelia-framework';\r\n\r\nexport let LoadingIndicator = decorators(\r\n  noView(['nprogress/nprogress.css']),\r\n  bindable({name: 'loading', defaultValue: false})\r\n).on(class {\r\n  loadingChanged(newValue){\r\n    if (newValue) {\r\n      nprogress.start();\r\n    } else {\r\n      nprogress.done();\r\n    }\r\n  }\r\n});",null],"sourceRoot":"..\\src"}